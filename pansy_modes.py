import numpy as n
import time
import matplotlib.pyplot as plt

def get_st_mode(tnow=0):
    st_mode_2024 = {"t0":0,
                    "t1":1e99,
                    "beam_pos_az_za": [(0,0),(0,10),(90,10),(180,10),(270,10)],
                    "ipp_us": 320,
                    "code_bit": 2,
                    "codes": n.array([[-1,1,-1,1,1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1],[ 1,1,1,1,-1,-1,1,1,-1,1,1,-1,1,-1,1,-1],[ -1,1,-1,1,-1,1,1,-1,1,1,-1,-1,1,1,1,1],[ -1,-1,-1,-1,-1,-1,1,1,1,-1,-1,1,1,-1,1,-1],[ 1,-1,1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1],[
 -1,-1,-1,-1,1,1,-1,-1,1,-1,-1,1,-1,1,-1,1],[ -1,1,-1,1,-1,1,1,-1,1,1,-1,-1,1,1,1,1],[ 1,1,1,1,1,1,-1,-1,-1,1,1,-1,-1,1,-1,1],[ -1,1,-1,1,1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1],[ -1,-1,-1,-1,1,1,-1,-1,1,-1,-1,1,-1,1,-1,1],[
 1,-1,1,-1,1,-1,-1,1,-1,-1,1,1,-1,-1,-1,-1],[ 1,1,1,1,1,1,-1,-1,-1,1,1,-1,-1,1,-1,1],[ -1,1,-1,1,1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1],[ 1,1,1,1,-1,-1,1,1,-1,1,1,-1,1,-1,1,-1],[ -1,1,-1,1,-1,1,1,-1,1,1,-1,-1,1,1,1,1],[
 -1,-1,-1,-1,-1,-1,1,1,1,-1,-1,1,1,-1,1,-1],[ -1,1,-1,1,1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1],[ -1,-1,-1,-1,1,1,-1,-1,1,-1,-1,1,-1,1,-1,1],[ 1,-1,1,-1,1,-1,-1,1,-1,-1,1,1,-1,-1,-1,-1],[ -1,-1,-1,-1,-1,-1,1,1,1,-1,-1,1,1,-1,1,-1],[
 -1,1,-1,1,1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1],[ -1,-1,-1,-1,1,1,-1,-1,1,-1,-1,1,-1,1,-1,1],[ -1,1,-1,1,-1,1,1,-1,1,1,-1,-1,1,1,1,1],[ 1,1,1,1,1,1,-1,-1,-1,1,1,-1,-1,1,-1,1],[ 1,-1,1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1],[
 1,1,1,1,-1,-1,1,1,-1,1,1,-1,1,-1,1,-1],[ -1,1,-1,1,-1,1,1,-1,1,1,-1,-1,1,1,1,1],[ -1,-1,-1,-1,-1,-1,1,1,1,-1,-1,1,1,-1,1,-1],[ -1,1,-1,1,1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1],[ 1,1,1,1,-1,-1,1,1,-1,1,1,-1,1,-1,1,-1],[
 1,-1,1,-1,1,-1,-1,1,-1,-1,1,1,-1,-1,-1,-1],[ -1,-1,-1,-1,-1,-1,1,1,1,-1,-1,1,1,-1,1,-1],[ -1,1,-1,1,1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1],[ -1,-1,-1,-1,1,1,-1,-1,1,-1,-1,1,-1,1,-1,1],[ -1,1,-1,1,-1,1,1,-1,1,1,-1,-1,1,1,1,1],[
 1,1,1,1,1,1,-1,-1,-1,1,1,-1,-1,1,-1,1],[ -1,1,-1,1,1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1],[ 1,1,1,1,-1,-1,1,1,-1,1,1,-1,1,-1,1,-1],[ 1,-1,1,-1,1,-1,-1,1,-1,-1,1,1,-1,-1,-1,-1],[ 1,1,1,1,1,1,-1,-1,-1,1,1,-1,-1,1,-1,1],[
 -1,-1,-1,-1,-1,-1,1,1,-1,1,1,-1,-1,1,-1,1],[ 1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,1,1,1],[ 1,1,1,1,-1,-1,1,1,1,-1,-1,1,-1,1,-1,1],[ 1,-1,1,-1,-1,1,1,-1,1,1,-1,-1,-1,-1,-1,-1],[ 1,1,1,1,1,1,-1,-1,1,-1,-1,1,1,-1,1,-1],[
 -1,1,-1,1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,-1],[ 1,1,1,1,-1,-1,1,1,1,-1,-1,1,-1,1,-1,1],[ -1,1,-1,1,1,-1,-1,1,-1,-1,1,1,1,1,1,1],[ -1,-1,-1,-1,-1,-1,1,1,-1,1,1,-1,-1,1,-1,1],[ -1,1,-1,1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,-1],[
 -1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,1,-1,1,-1],[ -1,1,-1,1,1,-1,-1,1,-1,-1,1,1,1,1,1,1],[ -1,-1,-1,-1,-1,-1,1,1,-1,1,1,-1,-1,1,-1,1],[ 1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,1,1,1],[ 1,1,1,1,-1,-1,1,1,1,-1,-1,1,-1,1,-1,1],[
 1,-1,1,-1,-1,1,1,-1,1,1,-1,-1,-1,-1,-1,-1],[ -1,-1,-1,-1,-1,-1,1,1,-1,1,1,-1,-1,1,-1,1],[ -1,1,-1,1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,-1],[ -1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,1,-1,1,-1],[ 1,-1,1,-1,-1,1,1,-1,1,1,-1,-1,-1,-1,-1,-1],[
 -1,-1,-1,-1,-1,-1,1,1,-1,1,1,-1,-1,1,-1,1],[ -1,1,-1,1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,-1],[ 1,1,1,1,-1,-1,1,1,1,-1,-1,1,-1,1,-1,1],[ -1,1,-1,1,1,-1,-1,1,-1,-1,1,1,1,1,1,1],[ 1,1,1,1,1,1,-1,-1,1,-1,-1,1,1,-1,1,-1],[
 1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,1,1,1],[ 1,1,1,1,-1,-1,1,1,1,-1,-1,1,-1,1,-1,1],[ 1,-1,1,-1,-1,1,1,-1,1,1,-1,-1,-1,-1,-1,-1],[ -1,-1,-1,-1,-1,-1,1,1,-1,1,1,-1,-1,1,-1,1],[ 1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,1,1,1],[
 -1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,1,-1,1,-1],[ 1,-1,1,-1,-1,1,1,-1,1,1,-1,-1,-1,-1,-1,-1],[ -1,-1,-1,-1,-1,-1,1,1,-1,1,1,-1,-1,1,-1,1],[ -1,1,-1,1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,-1],[ 1,1,1,1,-1,-1,1,1,1,-1,-1,1,-1,1,-1,1],[
 -1,1,-1,1,1,-1,-1,1,-1,-1,1,1,1,1,1,1],[ -1,-1,-1,-1,-1,-1,1,1,-1,1,1,-1,-1,1,-1,1],[ 1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,1,1,1],[ -1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,1,-1,1,-1],[ -1,1,-1,1,1,-1,-1,1,-1,-1,1,1,1,1,1,1],[
 1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,-1,1],[ -1,1,1,-1,1,-1,1,-1,1,1,1,1,-1,-1,1,1],[ 1,1,-1,-1,1,1,1,1,-1,1,-1,1,-1,1,1,-1],[ 1,-1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,1],[ -1,-1,1,1,1,1,1,1,1,-1,1,-1,-1,1,1,-1],[
 1,-1,-1,1,-1,1,-1,1,-1,-1,-1,-1,1,1,-1,-1],[ 1,1,-1,-1,1,1,1,1,-1,1,-1,1,-1,1,1,-1],[ -1,1,1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,-1],[ 1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,-1,1],[ 1,-1,-1,1,-1,1,-1,1,-1,-1,-1,-1,1,1,-1,-1],[
 -1,-1,1,1,-1,-1,-1,-1,1,-1,1,-1,1,-1,-1,1],[ -1,1,1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,-1],[ 1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,-1,1],[ -1,1,1,-1,1,-1,1,-1,1,1,1,1,-1,-1,1,1],[ 1,1,-1,-1,1,1,1,1,-1,1,-1,1,-1,1,1,-1],[
 1,-1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,1],[ 1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,-1,1],[ 1,-1,-1,1,-1,1,-1,1,-1,-1,-1,-1,1,1,-1,-1],[ -1,-1,1,1,-1,-1,-1,-1,1,-1,1,-1,1,-1,-1,1],[ 1,-1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,1],[
 1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,-1,1],[ 1,-1,-1,1,-1,1,-1,1,-1,-1,-1,-1,1,1,-1,-1],[ 1,1,-1,-1,1,1,1,1,-1,1,-1,1,-1,1,1,-1],[ -1,1,1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,-1],[ -1,-1,1,1,1,1,1,1,1,-1,1,-1,-1,1,1,-1],[
 -1,1,1,-1,1,-1,1,-1,1,1,1,1,-1,-1,1,1],[ 1,1,-1,-1,1,1,1,1,-1,1,-1,1,-1,1,1,-1],[ 1,-1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,1],[ 1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,-1,1],[ -1,1,1,-1,1,-1,1,-1,1,1,1,1,-1,-1,1,1],[
 -1,-1,1,1,-1,-1,-1,-1,1,-1,1,-1,1,-1,-1,1],[ 1,-1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,1],[ 1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,-1,1],[ 1,-1,-1,1,-1,1,-1,1,-1,-1,-1,-1,1,1,-1,-1],[ 1,1,-1,-1,1,1,1,1,-1,1,-1,1,-1,1,1,-1],[
 -1,1,1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,-1],[ 1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,-1,1],[ -1,1,1,-1,1,-1,1,-1,1,1,1,1,-1,-1,1,1],[ -1,-1,1,1,-1,-1,-1,-1,1,-1,1,-1,1,-1,-1,1],[ -1,1,1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,-1],[
 -1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1,1],[ 1,1,-1,-1,1,1,1,1,1,-1,1,-1,1,-1,-1,1],[ 1,-1,-1,1,-1,1,-1,1,1,1,1,1,-1,-1,1,1],[ 1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,-1],[ 1,-1,-1,1,1,-1,1,-1,1,1,1,1,1,1,-1,-1],[
 -1,-1,1,1,-1,-1,-1,-1,-1,1,-1,1,-1,1,1,-1],[ 1,-1,-1,1,-1,1,-1,1,1,1,1,1,-1,-1,1,1],[ -1,-1,1,1,1,1,1,1,-1,1,-1,1,1,-1,-1,1],[ -1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1,1],[ -1,-1,1,1,-1,-1,-1,-1,-1,1,-1,1,-1,1,1,-1],[
 -1,1,1,-1,1,-1,1,-1,-1,-1,-1,-1,1,1,-1,-1],[ -1,-1,1,1,1,1,1,1,-1,1,-1,1,1,-1,-1,1],[ -1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1,1],[ 1,1,-1,-1,1,1,1,1,1,-1,1,-1,1,-1,-1,1],[ 1,-1,-1,1,-1,1,-1,1,1,1,1,1,-1,-1,1,1],[
 1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,-1],[ -1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1,1],[ -1,-1,1,1,-1,-1,-1,-1,-1,1,-1,1,-1,1,1,-1],[ -1,1,1,-1,1,-1,1,-1,-1,-1,-1,-1,1,1,-1,-1],[ 1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,-1],[
 -1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1,1],[ -1,-1,1,1,-1,-1,-1,-1,-1,1,-1,1,-1,1,1,-1],[ 1,-1,-1,1,-1,1,-1,1,1,1,1,1,-1,-1,1,1],[ -1,-1,1,1,1,1,1,1,-1,1,-1,1,1,-1,-1,1],[ 1,-1,-1,1,1,-1,1,-1,1,1,1,1,1,1,-1,-1],[
 1,1,-1,-1,1,1,1,1,1,-1,1,-1,1,-1,-1,1],[ 1,-1,-1,1,-1,1,-1,1,1,1,1,1,-1,-1,1,1],[ 1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,-1],[ -1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1,1],[ 1,1,-1,-1,1,1,1,1,1,-1,1,-1,1,-1,-1,1],[
 -1,1,1,-1,1,-1,1,-1,-1,-1,-1,-1,1,1,-1,-1],[ 1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,-1],[ -1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1,1],[ -1,-1,1,1,-1,-1,-1,-1,-1,1,-1,1,-1,1,1,-1],[ 1,-1,-1,1,-1,1,-1,1,1,1,1,1,-1,-1,1,1],[
 -1,-1,1,1,1,1,1,1,-1,1,-1,1,1,-1,-1,1],[ -1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1,1],[ 1,1,-1,-1,1,1,1,1,1,-1,1,-1,1,-1,-1,1],[ -1,1,1,-1,1,-1,1,-1,-1,-1,-1,-1,1,1,-1,-1],[-1,-1,1,1,1,1,1,1,-1,1,-1,1,1,-1,-1,1]],dtype=n.complex64)
                    }
    return(st_mode_2024)
def get_m_mode(tnow=0):
   m_mode={
       "t0":0,
       "t1":1e99,
       "beam_pos_az_za": [(0,0),(0,10),(90,10),(180,10),(270,10)],
       "ipp_us": 1600,
       "codes": [
            [-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,1,1,-1,1,-1],
            [-1,-1,-1,-1,1,1,-1,-1,1,-1,-1,1,-1,1,-1,1],
            [1,1,1,1,1,1,-1,-1,-1,1,1,-1,-1,1,-1,1],
            [1,1,1,1,-1,-1,1,1,-1,1,1,-1,1,-1,1,-1],
            [1,1,1,1,1,1,-1,-1,-1,1,1,-1,-1,1,-1,1],
            [-1,-1,-1,-1,1,1,-1,-1,1,-1,-1,1,-1,1,-1,1],
            [1,1,1,1,1,1,-1,-1,-1,1,1,-1,-1,1,-1,1],
            [-1,-1,-1,-1,1,1,-1,-1,1,-1,-1,1,-1,1,-1,1],
            [1,1,1,1,1,1,-1,-1,-1,1,1,-1,-1,1,-1,1],
            [1,1,1,1,-1,-1,1,1,-1,1,1,-1,1,-1,1,-1],
            [-1,-1,-1,-1,1,1,-1,-1,1,-1,-1,1,-1,1,-1,1],
            [1,1,1,1,1,1,-1,-1,-1,1,1,-1,-1,1,-1,1],
            [1,1,1,1,-1,-1,1,1,-1,1,1,-1,1,-1,1,-1],
            [-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,1,1,-1,1,-1],
            [-1,-1,-1,-1,1,1,-1,-1,1,-1,-1,1,-1,1,-1,1],
            [-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,1,1,-1,1,-1],
            [-1,-1,-1,-1,1,1,-1,-1,1,-1,-1,1,-1,1,-1,1],
            [-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,1,1,-1,1,-1],
            [-1,-1,-1,-1,1,1,-1,-1,1,-1,-1,1,-1,1,-1,1],
            [-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,1,1,-1,1,-1]
       ],
       "code_bit": 8
   }
   return(m_mode)

def get_vector(mode,ncodes=5):
    ipp=mode["ipp_us"]
    z=n.zeros(ipp*ncodes,dtype=n.complex64)
    for i in range(ncodes):
        code=n.repeat(mode["codes"][i],mode["code_bit"])
        z[(i*ipp):(i*ipp+len(code))]=code
    return(z)

if __name__ == "__main__":
    stm=get_m_mode(time.time())
    codes=get_vector(stm)
    plt.plot(codes.real)
    plt.plot(codes.imag)
    plt.show()